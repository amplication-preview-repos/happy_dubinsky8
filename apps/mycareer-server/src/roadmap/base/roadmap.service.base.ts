/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Roadmap as PrismaRoadmap } from "@prisma/client";

export class RoadmapServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RoadmapCountArgs, "select">): Promise<number> {
    return this.prisma.roadmap.count(args);
  }

  async roadmaps(args: Prisma.RoadmapFindManyArgs): Promise<PrismaRoadmap[]> {
    return this.prisma.roadmap.findMany(args);
  }
  async roadmap(
    args: Prisma.RoadmapFindUniqueArgs
  ): Promise<PrismaRoadmap | null> {
    return this.prisma.roadmap.findUnique(args);
  }
  async createRoadmap(args: Prisma.RoadmapCreateArgs): Promise<PrismaRoadmap> {
    return this.prisma.roadmap.create(args);
  }
  async updateRoadmap(args: Prisma.RoadmapUpdateArgs): Promise<PrismaRoadmap> {
    return this.prisma.roadmap.update(args);
  }
  async deleteRoadmap(args: Prisma.RoadmapDeleteArgs): Promise<PrismaRoadmap> {
    return this.prisma.roadmap.delete(args);
  }
}
